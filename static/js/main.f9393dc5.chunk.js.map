{"version":3,"sources":["components/Article.js","components/Loading.js","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Article","props","articles","length","body","map","article","type","className","model","text","src","url","alt","height","width","items","item","Loading","Component","loading","Navigation","to","App","ArticleLoading","useState","appState","setAppState","useEffect","fetch","then","res","json","isLoading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAwDeA,EAtDC,SAACC,GAAW,IAClBC,EAAaD,EAAbC,SACR,OAAKA,GAAgC,IAApBA,EAASC,OAIxB,8BACKD,EAASE,KAAKC,KAAI,SAACC,GAClB,OAAQA,EAAQC,MACd,IAAK,UACH,OACE,qBAAwBC,UAAU,OAAlC,SACG,sBAAMA,UAAU,eAAhB,SAA+B,6BAAKF,EAAQG,MAAMC,UAD3CJ,EAAQC,MAItB,IAAK,YACH,OACE,qBAAwBC,UAAU,OAAlC,SACG,sBAAMA,UAAU,eAAhB,SAA+B,4BAAIF,EAAQG,MAAMC,UAD1CJ,EAAQC,MAItB,IAAK,QACH,OACE,qBAAwBC,UAAU,OAAlC,SACG,sBAAMA,UAAU,gBAAhB,SACA,qBAAKG,IAAKL,EAAQG,MAAMG,IAAKC,IAAKP,EAAQG,MAAMI,IAAKC,OAAQR,EAAQG,MAAMK,OAAQC,MAAOT,EAAQG,MAAMM,WAFjGT,EAAQC,MAMtB,IAAK,OACH,MAA2B,cAAvBD,EAAQG,MAAMF,KAEb,6BACCD,EAAQG,MAAMO,MAAMX,KAAI,SAACY,GAAD,OACrB,oBAAIT,UAAU,eAAd,SAA8BS,SAQnC,qDAGN,QACE,OACA,8BA5CH,kD,gBCKIC,MARf,SAAiBC,GACf,OAAO,YAAkD,IAAtBC,EAAqB,EAArBA,QAAYnB,EAAS,2BACtD,OAAKmB,EAEH,qBAAKZ,UAAU,uBAAf,8CAFmB,cAACW,EAAD,eAAelB,M,OCazBoB,EAbI,WACf,OACG,gCACG,cAAC,IAAD,CAASC,GAAG,YAAZ,sBACA,uBACA,cAAC,IAAD,CAASA,GAAG,YAAZ,sBACA,uBACA,cAAC,IAAD,CAASA,GAAG,YAAZ,sBACA,2BCkCKC,MAvCf,WACE,IAKMC,EAAiBN,EAAQlB,GANlB,EAOmByB,mBAAS,CACvCL,SAAS,EACTlB,SAAU,OATC,mBAONwB,EAPM,KAOIC,EAPJ,KAqBb,OATAC,qBAAU,SAAChB,GACTe,EAAY,CAAEP,SAAS,IAEvBS,MAdc,6FAeXC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC5B,GACLyB,EAAY,CAAEP,SAAS,EAAOlB,SAAUA,SAE3C,CAACyB,IAEF,sBAAKnB,UAAU,MAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qDAEF,qBAAKA,UAAU,eAAf,SACE,cAACgB,EAAD,CAAgBS,UAAWP,EAASN,QAASlB,SAAUwB,EAASxB,aAElE,iCACE,cAAC,IAAD,UACA,cAAC,EAAD,YC1BOgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f9393dc5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Article = (props) => {\n  const { articles } = props;\n  if (!articles || articles.length === 0) {\n    return <p>No Article found</p>;\n  }\n  return (\n    <div>\n        {articles.body.map((article) => {\n          switch (article.type) {\n            case 'heading':\n              return (\n                <div key={article.type} className='list'>\n                   <span className='article-text'><h1>{article.model.text}</h1></span>\n                </div>\n              );\n            case 'paragraph':\n              return (\n                <div key={article.type} className='list'>\n                   <span className='article-text'><p>{article.model.text}</p></span>\n                </div>\n              );\n            case 'image':\n              return (\n                <div key={article.type} className='list'>\n                   <span className='article-image'>\n                   <img src={article.model.url} alt={article.model.alt} height={article.model.height} width={article.model.width}></img>\n                   </span>\n                </div>\n              );\n            case 'list':\n              if (article.model.type === 'unordered'){\n                return (\n                   <ul>\n                   {article.model.items.map((item) => (\n                       <li className='article-text'>{item}</li>\n                    ))\n                    }\n\n                   </ul>\n                );\n              } else {\n                return (\n                  <div>OL not implemented</div>\n                );\n              }\n            default:\n              return (\n              <div></div>\n              );\n          }\n        })}\n          </div>\n  );\n};\nexport default Article;","import React from 'react';\n\nfunction Loading(Component) {\n  return function LoadingComponent({ loading, ...props }) {\n    if (!loading) return <Component {...props} />;\n    return (\n      <div className='article-loading-text'>Fetching Article please wait....</div>\n    );\n  };\n}\nexport default Loading;","import React from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n    return (\n       <div>\n          <NavLink to=\"/article1\">Article1</NavLink>\n          <br/>\n          <NavLink to=\"/article2\">Article2</NavLink>\n          <br/>\n          <NavLink to=\"/article3\">Article3</NavLink>\n          <br/>\n       </div>\n    );\n}\n\nexport default Navigation;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Article from './components/Article';\nimport Loading from './components/Loading';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Navigation from './components/Navigation';\n\nfunction App() {\n  const apiUrl1 = 'https://raw.githubusercontent.com/bbc/news-coding-test-dataset/master/data/article-1.json';\n  const apiUrl2 = 'https://raw.githubusercontent.com/bbc/news-coding-test-dataset/master/data/article-2.json';\n  const apiUrl3 = 'https://raw.githubusercontent.com/bbc/news-coding-test-dataset/master/data/article-3.json';\n  const apiUrl6 = 'https://raw.githubusercontent.com/bbc/news-coding-test-dataset/master/data/no_article';\n\n  const ArticleLoading = Loading(Article);\n  const [appState, setAppState] = useState({\n    loading: false,\n    articles: null,\n  });\n\n  useEffect((url) => {\n    setAppState({ loading: true });\n    const apiUrl = apiUrl1;\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((articles) => {\n        setAppState({ loading: false, articles: articles });\n      });\n  }, [setAppState]);\n  return (\n    <div className='App'>\n      <div className='article-title'>\n        <h1>BBC News Articles</h1>\n      </div>\n      <div className='article-body'>\n        <ArticleLoading isLoading={appState.loading} articles={appState.articles} />\n      </div>\n      <footer>\n        <BrowserRouter>\n        <Navigation></Navigation>\n        </BrowserRouter>\n      </footer>\n\n    </div>\n\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}